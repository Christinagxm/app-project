{"remainingRequest":"/Users/catherine/workspace/sublimeWorkspace/front-res/vue/app-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/catherine/workspace/sublimeWorkspace/front-res/vue/app-project/node_modules/v-circle/components/css-circle.vue?vue&type=style&index=0&id=b17f329c&lang=sass&scoped=true&","dependencies":[{"path":"/Users/catherine/workspace/sublimeWorkspace/front-res/vue/app-project/node_modules/v-circle/components/css-circle.vue","mtime":1461847993000},{"path":"/Users/catherine/workspace/sublimeWorkspace/front-res/vue/app-project/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/catherine/workspace/sublimeWorkspace/front-res/vue/app-project/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/catherine/workspace/sublimeWorkspace/front-res/vue/app-project/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/catherine/workspace/sublimeWorkspace/front-res/vue/app-project/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/catherine/workspace/sublimeWorkspace/front-res/vue/app-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/catherine/workspace/sublimeWorkspace/front-res/vue/app-project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKLnYtY2lyY2xlIHsKICBib3JkZXItcmFkaXVzOiA1MCU7CiAgcG9zaXRpb246IHJlbGF0aXZlOwoKICAubWFzaywgLmZpbGwgewogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgYm9yZGVyLXJhZGl1czogNTAlOwogICAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuOwogIH0KCiAgLnB2IHsKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIHRvcDogMDsKICAgIGxlZnQ6IDA7CiAgICBib3R0b206IDA7CiAgICByaWdodDogMDsKICAgIG1hcmdpbjogYXV0bzsKICAgIHotaW5kZXg6IDE7CiAgICBib3JkZXItcmFkaXVzOiA1MCU7CiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CgogICAgLnByb2dyZXNzIHsKICAgICAgbWFyZ2luOiAwOwogICAgICBwYWRkaW5nOiAwOwogICAgICBmb250LWZhbWlseTogJ0ltcGFjdCc7CiAgICB9CiAgfQoKfQo="},{"version":3,"sources":["css-circle.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"css-circle.vue","sourceRoot":"node_modules/v-circle/components","sourcesContent":["<template>\n<div class=\"v-circle\" v-bind:style=\"circleStyle\" v-on:click=\"setPv\">\n  <div class=\"mask full\" v-bind:style=\"[maskStyle, transitionStyle, rotateStyle]\">\n    <div class=\"fill\" v-bind:style=\"[fillStyle, transitionStyle, rotateStyle]\"></div>\n  </div>\n  <div class=\"mask half\" v-bind:style=\"[maskStyle]\">\n    <div class=\"fill\" v-bind:style=\"[fillStyle, transitionStyle, rotateStyle]\"></div>\n    <div class=\"fill fix\" v-bind:style=\"[fillStyle, fixStyle, transitionStyle]\"></div>\n  </div>\n  <div class=\"pv\" v-bind:style=\"pvStyle\">\n    <span class=\"progress\" v-bind:style=\"progressTextStyle\">\n      {{ pv || 0 }}\n    </span>\n  </div>\n</div>\n</template>\n\n<style lang=\"sass\" scoped>\n  .v-circle {\n    border-radius: 50%;\n    position: relative;\n\n    .mask, .fill {\n      position: absolute;\n      border-radius: 50%;\n      backface-visibility: hidden;\n    }\n\n    .pv {\n      position: absolute;\n      top: 0;\n      left: 0;\n      bottom: 0;\n      right: 0;\n      margin: auto;\n      z-index: 1;\n      border-radius: 50%;\n      text-align: center;\n\n      .progress {\n        margin: 0;\n        padding: 0;\n        font-family: 'Impact';\n      }\n    }\n\n  }\n</style>\n\n<script>\nconst DEFAULT_WIDTH = 150\n    , DEFAULT_BOLD = 5\n    , DEFAULT_FONT_SIZE = 64\n    , DEFAULT_BORDER_COLOR = '#bdc3c7'\n    , DEFAULT_TEXT_COLOR = '#bdc3c7'\n    , DEFAULT_FILL_COLOR = '#2ecc71'\n    , DEFAUTL_BG_COLOR = '#f9f9f9'\n    , DEFAUTL_TEXT_BG_COLOR = '#333333'\n\nexport default {\n  methods: {\n    setClip(t, r, b, l) {\n      return `rect(${t}px, ${r}px, ${b}px, ${l}px)`\n    },\n    setTransformStyle(pv, type) {\n      let deg = Math.floor((pv / 100) * 180)\n      if(type === 'fix') {\n        // remove the gap between two half circles\n        return `rotate(${deg * 2}deg)`\n      }\n      return `rotate(${deg}deg)`\n    },\n    setTransitionStyle(t) {\n      return `transform ${t}s`\n    },\n    setPv() {\n      this.pv = ~~(Math.random(0, 100) * 100)\n      let types = ['fix', 'rotate']\n\n      // map styles\n      types.map((type) => {\n        this[type + 'Style'] = {\n          transform: this.setTransformStyle(this.pv, type)\n        }\n      })\n    }\n  },\n\n  props: [\n    'color',\n    'width',\n    'fontSize',\n    'pv',\n    'textColor',\n    'bold',\n    'textBgColor',\n    'borderColor',\n    'during',\n    'bgColor'\n  ],\n\n  data() {\n    let transformStyleValue = this.setTransformStyle(this.pv)\n      , innerCircleWidth = ((this.width || DEFAULT_WIDTH)\n                           - 2 * (this.bold || DEFAULT_BOLD))\n                           + 'px'\n\n      , fixTransformStyleValue = this.setTransformStyle(this.pv, 'fix')\n      , transitionStyleValue = this.setTransitionStyle(this.during || 0.8)\n\n    return {\n      // 环形样式\n      circleStyle: {\n        borderColor: (this.borderColor || DEFAULT_BORDER_COLOR),\n        borderStyle: 'solid',\n        borderWidth: DEFAULT_BOLD + 'px',\n        width: (this.width || DEFAULT_WIDTH) + 'px',\n        height: (this.width || DEFAULT_WIDTH) + 'px',\n        backgroundColor: (this.bgColor || DEFAUTL_BG_COLOR)\n      },\n\n      // 进度文字样式\n      progressTextStyle: {\n        fontSize: (this.fontSize || DEFAULT_FONT_SIZE) + 'px',\n        color: this.textColor || DEFAULT_TEXT_COLOR\n      },\n\n      fillStyle: {\n        backgroundColor: this.color || DEFAULT_FILL_COLOR,\n        width: (this.width || DEFAULT_WIDTH) + 'px',\n        height: (this.width || DEFAULT_WIDTH) + 'px',\n        clip: this.setClip(0, this.width / 2, this.width, 0)\n      },\n\n      rotateStyle: {\n        transform: transformStyleValue,\n        webkitTransform: transformStyleValue,\n        msTransform: transformStyleValue,\n        oTransform: transformStyleValue,\n        mozTransform: transformStyleValue\n      },\n\n      transitionStyle: {\n        transition: transitionStyleValue,\n        webkitTransition: transitionStyleValue,\n        mozTransition: transitionStyleValue,\n        oTransition: transitionStyleValue,\n        msTransition: transitionStyleValue\n      },\n\n      maskStyle: {\n        width: (this.width || DEFAULT_WIDTH) + 'px',\n        height: (this.width || DEFAULT_WIDTH) + 'px',\n        clip: this.setClip(0, this.width, this.width, this.width / 2)\n      },\n\n      pvStyle: {\n        backgroundColor: this.textBgColor || DEFAUTL_TEXT_BG_COLOR,\n        width: innerCircleWidth,\n        height: innerCircleWidth,\n        lineHeight: innerCircleWidth\n      },\n\n      fixStyle: {\n        transform: fixTransformStyleValue,\n        webkitTransform: fixTransformStyleValue,\n        mozTransform: fixTransformStyleValue,\n        oTransform: fixTransformStyleValue,\n        msTransform: fixTransformStyleValue\n      }\n    }\n  }\n}\n</script>\n"]}]}