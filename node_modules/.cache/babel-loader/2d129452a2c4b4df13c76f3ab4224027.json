{"remainingRequest":"/Users/catherine/workspace/sublimeWorkspace/front-res/vue/app-project/node_modules/babel-loader/lib/index.js!/Users/catherine/workspace/sublimeWorkspace/front-res/vue/app-project/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/catherine/workspace/sublimeWorkspace/front-res/vue/app-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/catherine/workspace/sublimeWorkspace/front-res/vue/app-project/src/components/monitorTest/monitorComp/attr-pie-test.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/catherine/workspace/sublimeWorkspace/front-res/vue/app-project/src/components/monitorTest/monitorComp/attr-pie-test.vue","mtime":1579335440329},{"path":"/Users/catherine/workspace/sublimeWorkspace/front-res/vue/app-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/catherine/workspace/sublimeWorkspace/front-res/vue/app-project/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/catherine/workspace/sublimeWorkspace/front-res/vue/app-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/catherine/workspace/sublimeWorkspace/front-res/vue/app-project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsbCI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiYXR0ci1waWUtdGVzdCIsCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIGNhbnZhcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjYW52YXMnKTsKICAgICAgdmFyIGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KCcyZCcpOwogICAgICB0aGlzLmN4dCA9IGN0eDsgLy8gY3R4LmZpbGxTdHlsZSA9ICdyZWQnOwogICAgICAvLyBjdHguZmlsbFJlY3QoMCwgMCwgMTUwLCAxMDApOwogICAgICAvLwogICAgICAvLyBjdHguZmlsbFN0eWxlID0gJ2dyZWVuJzsKICAgICAgLy8gY3R4LmZpbGxSZWN0KDEwLCAxMCwgMTUwLCAxMDApOwogICAgICAvLyBjdHguc3Ryb2tlUmVjdCgyMCwgMjAsIDEwMCwgMTAwKTsKICAgICAgLy8gY3R4LmNsZWFyUmVjdCgyMCwgMjAsIDE1MCwgMTAwKTsKICAgICAgLy8KICAgICAgLy8gY3R4LmJlZ2luUGF0aCgpOwogICAgICAvLyBjdHgubW92ZVRvKDEwMCwgMTAwKTsKICAgICAgLy8gY3R4LmxpbmVUbygxMjUsIDc1KTsKICAgICAgLy8gY3R4LmxpbmVUbygxMDAsIDUwKTsKICAgICAgLy8gY3R4LmZpbGwoKTsKICAgICAgLy8KICAgICAgLy8gY3R4LmJlZ2luUGF0aCgpOwogICAgICAvLyBjdHgubW92ZVRvKDkwLCAxMDApOwogICAgICAvLyBjdHgubGluZVRvKDY1LCA3NSk7CiAgICAgIC8vIGN0eC5saW5lVG8oOTAsIDUwKTsKICAgICAgLy8gY3R4LmNsb3NlUGF0aCgpOwogICAgICAvLyBjdHguc3Ryb2tlKCk7CiAgICAgIC8vCiAgICAgIC8vIGN0eC5iZWdpblBhdGgoKTsKICAgICAgLy8gY3R4LmFyY1RvKDIwMCwgMzAwLCA0MDAsIDMwMCwgMTAwKTsKICAgICAgLy8gY3R4LmZpbGwoKTsKICAgICAgLy8gY3R4LmJlZ2luUGF0aCgpOwogICAgICAvLyBjdHguYXJjKDMwLCAzMCwgMjAsIDAsIE1hdGguUEkgKiAyLCBmYWxzZSk7CiAgICAgIC8vIGN0eC5zdHJva2UoKTsKICAgICAgLy8gY3R4LmZpbGxTdHlsZSA9ICdyZWQnOwogICAgICAvLwogICAgICAvLyBjdHguYmVnaW5QYXRoKCk7CiAgICAgIC8vIGN0eC5tb3ZlVG8oNTAsIDUwKTsKICAgICAgLy8gY3R4LnF1YWRyYXRpY0N1cnZlVG8oNzUsIDc1LCAxMDAsIDUwKTsKICAgICAgLy8gY3R4LnN0cm9rZSgpOwogICAgICAvLwogICAgICAvLyBjdHguYmVnaW5QYXRoKCk7CiAgICAgIC8vIGN0eC5tb3ZlVG8oNTAsIDUwKTsKICAgICAgLy8gY3R4LmJlemllckN1cnZlVG8oMjUsIDE1LCAxMDAsIDE1LCAxMDAsIDUwKTsKICAgICAgLy8gY3R4LnN0cm9rZSgpOwogICAgICAvLwogICAgICAvLyBsZXQgcmVjdCA9IG5ldyBQYXRoMkQoKTsKICAgICAgLy8gcmVjdC5yZWN0KDEwMCwgMTAwLCAyMCwgMzApOwogICAgICAvLyBjdHguc3Ryb2tlKHJlY3QpOwogICAgICAvLwogICAgICAvLyBsZXQgY2lyY2xlID0gbmV3IFBhdGgyRCgpOwogICAgICAvLyBjaXJjbGUuYXJjKDE1MCwgMTEwLCAyMCwgMCwgTWF0aC5QSSAqIDIpOwogICAgICAvLyBjdHguZmlsbChjaXJjbGUpOwogICAgICAvL+WKoOi9veWbvueJhwogICAgICAvLyBsZXQgaW1nID0gbmV3IEltYWdlKCk7CiAgICAgIC8vIGltZy5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7CiAgICAgIC8vICAgICBjdHguZHJhd0ltYWdlKGltZywgMCwgMCk7CiAgICAgIC8vIH0KICAgICAgLy8gaW1nLnNyYyA9ICcuLi9pbWdzL21vbmtleS5qcGVnJzsKICAgICAgLy8gaW1nLmFsdCA9ICdtb25leSc7CiAgICAgIC8vCiAgICAgIC8vCiAgICAgIC8vIC8v6aW85Zu+55m+5YiG5q+UCiAgICAgIC8vIGN0eC5iZWdpblBhdGgoKTsKICAgICAgLy8gY3R4Lm1vdmVUbygxNTAsIDEwMCk7CiAgICAgIC8vIGN0eC5hcmMoMTAwLCAxMDAsIDUwLCAwLCBNYXRoLlBJKTsKICAgICAgLy8gY3R4LmNsb3NlUGF0aCgpOwogICAgICAvLyBjdHguc3Ryb2tlKCk7CgogICAgICB0aGlzLmRyYXcxKCk7CiAgICB9KTsKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjdXJyZW50OiAwLAogICAgICB0OiAwLAogICAgICBjeHQ6ICcnLAogICAgICBpbml0aWFsVmFsOiAxMAogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGRyYXcxOiBmdW5jdGlvbiBkcmF3MSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHRoaXMubG9hZENhbnZhcyhfdGhpcy5pbml0aWFsVmFsIC8gMTAwKTsKICAgICAgdmFyIElEID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkgewogICAgICAgIGlmIChfdGhpcy5pbml0aWFsVmFsIDwgMTAwKSB7CiAgICAgICAgICBfdGhpcy5pbml0aWFsVmFsICs9IDEwOwoKICAgICAgICAgIF90aGlzLmxvYWRDYW52YXMoX3RoaXMuaW5pdGlhbFZhbCAvIDEwMCk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGNsZWFySW50ZXJ2YWwoSUQpOwogICAgICAgIH0KICAgICAgfSwgMTAwMCk7CiAgICB9LAogICAgZHJhdzogZnVuY3Rpb24gZHJhdyhjdXJyZW50KSB7CiAgICAgIHZhciBjeHQgPSB0aGlzLmN4dDsgLy8gY3h0LmxpbmVUbygxMDAsMCk7IC8v5re75Yqg5LiA5Liq5paw54K577yM54S25ZCO5Zyo55S75biD5Lit5Yib5bu65LuO6K+l54K55Yiw5pyA5ZCO5oyH5a6a54K555qE57q/5p2hCgogICAgICBjeHQuYXJjKDEwMCwgMTAwLCA4MCwgLTAuNSAqIE1hdGguUEksIGN1cnJlbnQgKiAoMiAqIE1hdGguUEkpIC0gTWF0aC5QSSAvIDIsIGZhbHNlKTsgLy/nu5jliLbkuIDkuKrkuK3lv4PngrnkuLrvvIgxMDAsMTAw77yJ77yM5Y2K5b6E5Li6MTAw77yM6LW35aeL54K55Li6MS41Kk1hdGguUEks57uI54K55Li6MipNYXRoLlBJLOmhuuaXtumSiOeahDEvNOWchgoKICAgICAgY3h0LmNsb3NlUGF0aCgpOyAvL+WIm+W7uuS7juW9k+WJjeeCueWbnuWIsOi1t+Wni+eCueeahOi3r+W+hAoKICAgICAgY3h0LmZpbGwoKTsgLy/loavlhYXlvZPliY3nu5jlm77vvIjot6/lvoTvvIkKICAgICAgLy9jeHQubGluZVdpZHRoID0gMTAuMDsgLy/orr7nva7miJbov5Tlm57lvZPliY3nmoTnur/mnaHlrr3luqYKCiAgICAgIGN4dC5zdHJva2UoKTsgLy/nu5jliLblt7LlrprkuYnnmoTot6/lvoQKICAgIH0sCiAgICBsb2FkQ2FudmFzOiBmdW5jdGlvbiBsb2FkQ2FudmFzKG5vdykgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIGN4dCA9IF90aGlzLmN4dDsKICAgICAgY3h0LmZpbGxTdHlsZSA9ICcjRkYwMDAwJzsgLy/orr7nva7miJbov5Tlm57nlKjkuo7loavlhYXnu5jnlLvnmoTpopzoibLjgIHmuJDlj5jmiJbmqKHlvI8g5p+T5oiQ57qi6ImyCgogICAgICBjeHQuc3Ryb2tlU3R5bGUgPSAiI2ZmMDAwMCI7IC8v6K6+572u5oiW6L+U5Zue55So5LqO56yU6Kem55qE6aKc6Imy44CB5riQ5Y+Y5oiW5qih5byPCiAgICAgIC8vY3h0LmxpbmVDYXAgPSAnc3F1YXJlJzsgLy/orr7nva7miJbov5Tlm57nur/mnaHnmoTnu5PmnZ/nq6/ngrnmoLflvI8KCiAgICAgIGN4dC5iZWdpblBhdGgoKTsgLy/otbflp4vkuIDmnaHot6/lvoTvvIzmiJbph43nva7lvZPliY3ot6/lvoQKCiAgICAgIGN4dC5tb3ZlVG8oMTAwLCAxMDApOyAvL+aKiui3r+W+hOenu+WKqOWIsOeUu+W4g+S4reeahOaMh+WumueCue+8jOS4jeWIm+W7uue6v+adoQoKICAgICAgdmFyIHRpbWVyID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkgewogICAgICAgIGlmIChfdGhpcy50ID4gbm93KSB7CiAgICAgICAgICBfdGhpcy5kcmF3KG5vdyk7IC8v5pyA5ZCO5LiA5qyh57uY5Yi2CgoKICAgICAgICAgIGNsZWFySW50ZXJ2YWwodGltZXIpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBfdGhpcy5kcmF3KF90aGlzLnQpOwoKICAgICAgICAgIF90aGlzLnQgKz0gMC4wMDU7CiAgICAgICAgfQogICAgICB9LCA1KTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["attr-pie-test.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <header>canvasTest</header>\n        <canvas id=\"canvas\" width=\"500px\" height=\"500px\"></canvas>\n    </div>\n\n</template>\n<script>\n    export default {\n        name: \"attr-pie-test\",\n        mounted: function () {\n            this.$nextTick(function () {\n                const canvas = document.getElementById('canvas');\n                const ctx = canvas.getContext('2d');\n                this.cxt = ctx;\n\n                // ctx.fillStyle = 'red';\n                // ctx.fillRect(0, 0, 150, 100);\n                //\n                // ctx.fillStyle = 'green';\n                // ctx.fillRect(10, 10, 150, 100);\n                // ctx.strokeRect(20, 20, 100, 100);\n                // ctx.clearRect(20, 20, 150, 100);\n                //\n                // ctx.beginPath();\n                // ctx.moveTo(100, 100);\n                // ctx.lineTo(125, 75);\n                // ctx.lineTo(100, 50);\n                // ctx.fill();\n                //\n                // ctx.beginPath();\n                // ctx.moveTo(90, 100);\n                // ctx.lineTo(65, 75);\n                // ctx.lineTo(90, 50);\n                // ctx.closePath();\n                // ctx.stroke();\n                //\n                // ctx.beginPath();\n                // ctx.arcTo(200, 300, 400, 300, 100);\n                // ctx.fill();\n\n                // ctx.beginPath();\n                // ctx.arc(30, 30, 20, 0, Math.PI * 2, false);\n                // ctx.stroke();\n                // ctx.fillStyle = 'red';\n                //\n                // ctx.beginPath();\n                // ctx.moveTo(50, 50);\n                // ctx.quadraticCurveTo(75, 75, 100, 50);\n                // ctx.stroke();\n                //\n                // ctx.beginPath();\n                // ctx.moveTo(50, 50);\n                // ctx.bezierCurveTo(25, 15, 100, 15, 100, 50);\n                // ctx.stroke();\n                //\n                // let rect = new Path2D();\n                // rect.rect(100, 100, 20, 30);\n                // ctx.stroke(rect);\n                //\n                // let circle = new Path2D();\n                // circle.arc(150, 110, 20, 0, Math.PI * 2);\n                // ctx.fill(circle);\n\n\n                //加载图片\n                // let img = new Image();\n                // img.onload = function () {\n                //     ctx.drawImage(img, 0, 0);\n                // }\n                // img.src = '../imgs/monkey.jpeg';\n                // img.alt = 'money';\n                //\n                //\n                // //饼图百分比\n                // ctx.beginPath();\n                // ctx.moveTo(150, 100);\n                // ctx.arc(100, 100, 50, 0, Math.PI);\n                // ctx.closePath();\n                // ctx.stroke();\n                this.draw1();\n\n\n            })\n        },\n        data: function () {\n            return {\n                current: 0,\n                t: 0,\n                cxt: '',\n                initialVal: 10\n            }\n        },\n        methods: {\n\n            draw1: function () {\n                let _this = this;\n                this.loadCanvas(_this.initialVal / 100);\n                let ID = setInterval(function () {\n                    if (_this.initialVal < 100) {\n                        _this.initialVal += 10;\n                        _this.loadCanvas(_this.initialVal / 100);\n                    } else {\n                        clearInterval(ID);\n                    }\n                }, 1000)\n            },\n\n            draw(current) {\n                let cxt = this.cxt;\n// cxt.lineTo(100,0); //添加一个新点，然后在画布中创建从该点到最后指定点的线条\n                cxt.arc(100, 100, 80, -0.5 * Math.PI, current * (2 * Math.PI) - Math.PI / 2, false); //绘制一个中心点为（100,100），半径为100，起始点为1.5*Math.PI,终点为2*Math.PI,顺时针的1/4圆\n                cxt.closePath(); //创建从当前点回到起始点的路径\n                cxt.fill();//填充当前绘图（路径）\n//cxt.lineWidth = 10.0; //设置或返回当前的线条宽度\n                cxt.stroke(); //绘制已定义的路径\n            },\n\n            loadCanvas(now) {\n                let _this = this;\n                let cxt = _this.cxt;\n                cxt.fillStyle = '#FF0000'; //设置或返回用于填充绘画的颜色、渐变或模式 染成红色\n                cxt.strokeStyle = \"#ff0000\"; //设置或返回用于笔触的颜色、渐变或模式\n//cxt.lineCap = 'square'; //设置或返回线条的结束端点样式\n                cxt.beginPath(); //起始一条路径，或重置当前路径\n                cxt.moveTo(100, 100); //把路径移动到画布中的指定点，不创建线条\n                let timer = setInterval(function () {\n                    if (_this.t > now) {\n                        _this.draw(now);//最后一次绘制\n                        clearInterval(timer);\n                    } else {\n                        _this.draw(_this.t);\n                        _this.t += 0.005;\n                    }\n                }, 5);\n            }\n\n        }\n    }\n</script>\n\n<style scoped>\n</style>"],"sourceRoot":"src/components/monitorTest/monitorComp"}]}